buildscript {
    ext {
        springBootVersion = '2.0.3.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}

apply plugin: 'kotlin-platform-jvm'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'


dependencies {
    expectedBy project(':kzen-auto-common')
    compile project(":kzen-auto-js")

    compile group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk8', version: kotlinVersion
    compile("org.jetbrains.kotlin:kotlin-reflect")
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinxCoroutinesCoreVersion"

    compile('org.springframework.boot:spring-boot-starter-webflux')
    compile('com.fasterxml.jackson.module:jackson-module-kotlin')
    compile "com.google.guava:guava:$guavaVersion"

    compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: seleniumVersion

    compile group: 'tech.kzen.lib', name: 'kzen-lib-jvm', version: kzenLibVersion

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('io.projectreactor:reactor-test')
    testCompile group: 'org.jetbrains.kotlin', name: 'kotlin-test', version: kotlinVersion
    testCompile group: 'org.jetbrains.kotlin', name: 'kotlin-test-junit', version: kotlinVersion
}


compileKotlin {
    targetCompatibility = javaVersion
    sourceCompatibility = javaVersion
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = javaVersion
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = javaVersion
    }
}


processResources {
    from ('../kzen-auto-js/build/dist/') {
        into 'public'
    }
}


jar {
    enabled = true
}
bootJar {
    classifier = 'boot'
}