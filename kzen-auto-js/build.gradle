apply plugin: 'kotlin-platform-js'
apply plugin: 'kotlin-dce-js'
apply plugin: 'com.moowork.node'

//repositories {
//    maven { url "http://dl.bintray.com/kotlin/kotlin-dev" }
//    maven { url "http://dl.bintray.com/kotlinx/kotlinx" }
//    maven { url "http://dl.bintray.com/hypnosphi/kotlin-wrappers" }
//}

dependencies {
    expectedBy project(':kzen-auto-common')

    compile group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-js', version: kotlinVersion
    compile "org.jetbrains.kotlinx:kotlinx-html-js:${kotlinxHtmlVersion}"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core-js:${kotlinxCoroutinesCoreVersion}"

    compile group: 'tech.kzen.lib', name: 'kzen-lib-js', version: kzenLibVersion

//    compile group: 'com.github.rivasdiaz', name: 'kotlin-rmwc', version: '8e9666dfc8'
    // com.github.rivasdiaz:kotlin-rmwc:8e9666dfc8

    compile "org.jetbrains:kotlin-react:$reactVersion"
    compile "org.jetbrains:kotlin-react-dom:$reactDomVersion"
    compile "org.jetbrains:kotlin-styled:$kotlinStyledVersion"

    testCompile group: 'org.jetbrains.kotlin', name: 'kotlin-test-js', version: kotlinVersion
}


node {
    download true
}

compileKotlin2Js {
    kotlinOptions {
        metaInfo = true
        sourceMap = true
        sourceMapEmbedSources = 'always'
        moduleKind = 'commonjs'
        main = 'tech.kzen.auto.client.Main'
    }
}

compileTestKotlin2Js {
    kotlinOptions.moduleKind = 'commonjs'
}

// Downloads JS dependencies:
task yarnInstall(type: YarnTask) {
    args = ['install']
}


// TODO: apply partial?
//runDceKotlinJs.keep "web.js_tech.kzen"
runDceKotlinJs.dceOptions.devMode = true


// Creates minified, packed main.bundle.js at build/dist:
task bundle(type: YarnTask, dependsOn: [runDceKotlinJs, yarnInstall]) {
    args = ["run", "bundle"]
    assemble.dependsOn bundle
}

// Copies files from src/main/resouces to build/dist. These resources will be served by dev server:
task copyStaticResources(type: Copy) {
    from sourceSets.main.resources
    into "${buildDir}/dist"
    bundle.dependsOn copyStaticResources
}

// Extracts JS libs from included dependencies to node_modules in build directory:
task populateNodeModules(type: Copy, dependsOn: compileKotlin2Js) {
    from compileKotlin2Js.destinationDir

    configurations.testCompile.each {
        from zipTree(it.absolutePath).matching { include '*.js' }
    }

    into "${buildDir}/node_modules"
}

// Starts dev server that serves built application in dev mode; run watch for hot reload:
task run(type: YarnTask, dependsOn: [copyStaticResources, populateNodeModules, yarnInstall]) {
    args = ["run", "start"]
}

// Test runner:
task runKarma(type: YarnTask, dependsOn: [populateNodeModules, yarnInstall]) {
    args = ['test']
    test.dependsOn runKarma
}

// Recompiles sources on file changes. Invoke 'gradle kzen-auto-js:run' and 'gradle -t kzen-auto-js:watch' for hot reload.
// https://stackoverflow.com/questions/54443916/kotlin-1-3-20-with-gradle-5-1-1-compilekotlin2js-execute-hot-reload
task watch {
    inputs.files 'src/main'
    doLast {
        compileKotlin2Js.execute()
        populateNodeModules.execute()
        copyStaticResources.execute()
    }
}
